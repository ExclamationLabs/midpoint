<!--
  ~ Copyright (c) 2010-2018 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<role oid="42ef2848-3793-4120-8d03-d8e5f8c23237"
        xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
        xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
	  	xmlns:s="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3"
        xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
        xmlns:piracy="http://midpoint.evolveum.com/xml/ns/samples/piracy">
    <name>Detecting modifications</name>
    <assignment>
    	<policyRule>
    		<name>detecting modifications</name>
    		<policyConstraints>
		    	<modification>
					<operation>modify</operation>
				</modification>
		    </policyConstraints>
			<policyActions>
				<scriptExecution>
					<executeScript>
						<s:pipeline>
							<s:action>
								<s:type>log</s:type>
								<s:parameter>
									<s:name>message</s:name>
									<c:value>They modified me! </c:value>
								</s:parameter>
							</s:action>
							<s:action>
								<s:type>execute-script</s:type>
								<s:parameter>
									<s:name>script</s:name>
									<c:value>
										<c:code>
											import com.evolveum.midpoint.prism.delta.builder.*
											import com.evolveum.midpoint.xml.ns._public.common.common_3.*
											import com.evolveum.midpoint.model.api.*

											log.info('=== Variables ===')
											this.binding.variables.each {k,v -> log.info('{} = {}', k, v)}

											delta = DeltaBuilder.deltaFor(RoleType.class, prismContext)
												.item(RoleType.F_DESCRIPTION).replace('Modified by ' + actor.name + ' on ' + new Date())
												.asObjectDelta(input.oid)
											midpoint.modifyObject(delta, ModelExecuteOptions.createRaw())
										</c:code>
									</c:value>
								</s:parameter>
							</s:action>
						</s:pipeline>
					</executeScript>
				</scriptExecution>
			</policyActions>
    	</policyRule>
    </assignment>
</role>
